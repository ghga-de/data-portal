#!/bin/bash

# create self-signed certificate for testing with the browser

CERTFILE=cert.pem
KEYFILE=key.pem

cd /workspace/.devcontainer

if ! test -f "$CERTFILE" || ! test -f "$KEYFILE"; then
  URL=${data_portal_base_url}
  echo "URL=$URL"
  HOST=$(echo "$URL" | awk -F[/:] '{print $4}')
  if [ -z "$HOST" ] || [ "$HOST" == "localhost" ] || [ "$HOST" == "127.0.0.1" ]; then
    HOST="data.staging.ghga.dev"
  fi
  echo "Creating self-signed certificate for $HOST"
  if ! test -f "ca-$CERTFILE" || ! test -f "ca-$KEYFILE"; then
    openssl req -x509 -newkey rsa:4096 -nodes \
      -out "ca-$CERTFILE" -keyout "ca-$KEYFILE" \
      -subj "/CN=$HOST" -days 356
  fi
  openssl req -newkey rsa:4096 -nodes \
    -out "req-$CERTFILE" -keyout "$KEYFILE" \
    -subj "/CN=$HOST"
  echo "subjectAltName=DNS:$HOST,DNS:localhost
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage=digitalSignature,keyEncipherment
extendedKeyUsage=serverAuth" > "ca.ext"
  openssl x509 -req \
    -CA "ca-$CERTFILE" -CAkey "ca-$KEYFILE" \
    -in "req-$CERTFILE" -out "$CERTFILE" \
    -CAcreateserial -days 356 \
    -extfile ca.ext
  rm -f "req-$CERTFILE" ca.ext "ca-${CERTFILE%.pem}.srl"
  echo "Add ca-$CERTFILE to your browser's trusted certificates"
fi
